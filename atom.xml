<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Baco&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-02T16:39:14.055Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Baco</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shell基本语法</title>
    <link href="http://yoursite.com/2020/06/01/Shell%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2020/06/01/Shell%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2020-06-01T09:39:18.000Z</published>
    <updated>2020-06-02T16:39:14.055Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、Shell概述"><a href="#一、Shell概述" class="headerlink" title="一、Shell概述"></a>一、Shell概述</h1><p>弱类型语言</p><h2 id="1、Shell是什么"><a href="#1、Shell是什么" class="headerlink" title="1、Shell是什么"></a>1、Shell是什么</h2><ol><li>shell字面意思：壳，核：操作系统，shell是保护操作系统的</li><li>计算机操作系统只能识别0和1组成的机器码，通过GUI|CLI来间接操作操作系统。GUI（图形化界面）|CLI（命令行）在用户与操作系统之间，相当于桥梁，结构上看，GUI和CLI保护操作系统 </li><li>GUI与CLI就是通过shell实现的</li></ol><h2 id="2、Shell怎么用"><a href="#2、Shell怎么用" class="headerlink" title="2、Shell怎么用"></a>2、Shell怎么用</h2><h3 id="2-1、流程"><a href="#2-1、流程" class="headerlink" title="2.1、流程"></a>2.1、流程</h3><ul><li>步骤1、创建一个后缀名是.sh的文本文档</li><li>步骤2、在文本文件中录入一个命令（第一行固定格式 #! /bin/bash，指用bin目录下的bash解释）如：echo “xxxx”在命令行模式下直接输出数据</li><li>步骤3、执行 .sh 文件（shell脚本，在shell脚本里面放一些DOS命令，执行shell脚本相当于在命令行中执行DOS命令）<ul><li>sh（bash）shell文件</li><li>绝对路径（/xxx/yyy/abc.sh）或相对路径（./abc.sh）注意：<strong>执行命令前修改权限</strong> chmod 777 abc.sh</li><li>source abc.sh（source相当于 ./）</li></ul></li></ul><h3 id="2-2、练习"><a href="#2-2、练习" class="headerlink" title="2.2、练习"></a>2.2、练习</h3><ul><li>在命令行输出当前所在目录<ul><li>创建文本文档test.sh</li><li>在文档中输入固定格式+命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;bin&#x2F;bash</span><br><span class="line">pwd</span><br></pre></td></tr></table></figure></li><li>执行<ul><li><code>sh test.sh</code></li><li><code>chmod 777 test.sh</code><br><code>/home/xxx/test01_pwd.sh</code> 或 <code>./test.sh</code></li><li><code>source test.sh</code> </li></ul></li></ul></li></ul><h1 id="二、Shell语法"><a href="#二、Shell语法" class="headerlink" title="二、Shell语法"></a>二、Shell语法</h1><h2 id="1、注释"><a href="#1、注释" class="headerlink" title="1、注释"></a>1、注释</h2><p>注释是程序中非功能性说明文本,增强程度的易读性，易维护性</p><h3 id="1-1、单行注释"><a href="#1-1、单行注释" class="headerlink" title="1.1、单行注释"></a>1.1、单行注释</h3><p>格式：#注释文本</p><h3 id="1-2、多行注释"><a href="#1-2、多行注释" class="headerlink" title="1.2、多行注释"></a>1.2、多行注释</h3><p>格式：<br>:&lt;&lt;自定义的标记<br>  第一行注释<br>  第二行注释<br>  ……<br>自定义的标记</p><h2 id="2、变量"><a href="#2、变量" class="headerlink" title="2、变量"></a>2、变量</h2><p>程序=数据+数据操作<br>变量就是数据的载体，是因为其中的值可以改变。变量为数据设置一个引用，以后再使用这个数据时，可以通过引用获取数据。</p><h2 id="2-1、变量创建"><a href="#2-1、变量创建" class="headerlink" title="2.1、变量创建"></a>2.1、变量创建</h2><h3 id="2-1-1、格式"><a href="#2-1-1、格式" class="headerlink" title="2.1.1、格式"></a>2.1.1、格式</h3><p>变量名=变量值</p><h3 id="2-1-2、注意事项"><a href="#2-1-2、注意事项" class="headerlink" title="2.1.2、注意事项"></a>2.1.2、注意事项</h3><ul><li>变量名不能数字开头</li><li>变量名不能有空格这种特殊字符</li><li>起名做到见名知意</li><li>变量名不要使用关键字</li><li>赋值符号 <strong>=</strong>左右两侧不要有空格</li><li>变量值可以不使用引号，但是如果有空格，必须使用 “ “ 或 ‘ ‘</li><li>“ “ 和 ‘ ‘的区别：变量之间赋值时，如果是” “，那么赋的是变量的值；如果是’ ‘，那么是指赋值调用格式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;&quot;abc&quot;</span><br><span class="line">name2&#x3D;&quot;$&#123;name&#125;&quot;</span><br><span class="line">name3&#x3D;&#39;$&#123;name&#125;&#39;</span><br><span class="line">echo &quot;$&#123;name2&#125;&quot;  &#x2F;&#x2F;输出abc</span><br><span class="line">echo &quot;$&#123;name3&#125;&quot;  &#x2F;&#x2F;输出$&#123;name&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-2、变量查询"><a href="#2-2、变量查询" class="headerlink" title="2.2、变量查询"></a>2.2、变量查询</h2><h3 id="2-2-1、格式"><a href="#2-2-1、格式" class="headerlink" title="2.2.1、格式"></a>2.2.1、格式</h3><p>标准格式：”${变量名}”<br>其他格式：${变量名} 或 $变量名</p><h2 id="2-3、变量修改"><a href="#2-3、变量修改" class="headerlink" title="2.3、变量修改"></a>2.3、变量修改</h2><h3 id="2-3-3、格式"><a href="#2-3-3、格式" class="headerlink" title="2.3.3、格式"></a>2.3.3、格式</h3><p>变量名=变量值</p><h2 id="2-4、变量删除"><a href="#2-4、变量删除" class="headerlink" title="2.4、变量删除"></a>2.4、变量删除</h2><h3 id="2-4-1、格式"><a href="#2-4-1、格式" class="headerlink" title="2.4.1、格式"></a>2.4.1、格式</h3><p>unset 变量名</p><h2 id="2-5、变量分类"><a href="#2-5、变量分类" class="headerlink" title="2.5、变量分类"></a>2.5、变量分类</h2><h3 id="2-5-1、本地-局部变量"><a href="#2-5-1、本地-局部变量" class="headerlink" title="2.5.1、本地/局部变量"></a>2.5.1、本地/局部变量</h3><p>只有当前shell可以使用的变量</p><h3 id="2-5-2、全局-静态变量"><a href="#2-5-2、全局-静态变量" class="headerlink" title="2.5.2、全局/静态变量"></a>2.5.2、全局/静态变量</h3><ul><li>是被多个shell共享的变量</li><li>如何将本地变量转换成全局变量？<ul><li>格式：export 局部变量</li><li>思想：将本地变量设置为全局变量，就是将本地变量导出到共享空间</li></ul></li><li>查询全局变量：env</li></ul><p>注意1：如果是全局变量，建议变量名所有字母都大写<br>注意2：全局变量要慎用</p><h3 id="2-5-3、内置变量（特殊变量）"><a href="#2-5-3、内置变量（特殊变量）" class="headerlink" title="2.5.3、内置变量（特殊变量）"></a>2.5.3、内置变量（特殊变量）</h3><ul><li><p>编写shell动态获取某个目录下的子级。实现流程：</p><ul><li>shell调用时，可以传入要操作的目录。格式：sh abc.sh 要操作的目录（如：<code>sh var01_inner.sh /home/test</code>）</li><li>shell执行时，可以获取调用时传入的目录。格式：ls $1（代表传入的第一个参数）<br>上述流程其实就是<strong>传参以及参数解析</strong>的过程，这个参数就可以称之为内置变量</li></ul></li><li><p>语法总结：</p><ul><li>应用场景：程序执行时有些数据是可变的，调用脚本时，传入这些可变数据，脚本中解析获取</li><li>调用格式：sh xxx.sh 参数1 参数2 参数3 ……</li><li>解析格式：$N 获取第N个参数</li><li>优点：动态传值，更灵活</li><li>注意：$N获取第N个参数，但是N最大就到9（若脚本中写$10，这里0为字符串，表示获取第1个参数的值+0，而不是获取第10位参数）<ul><li>$0获取脚本文件名 var02_inner.sh</li><li>$*获取所有参数</li><li>$#获取参数个数</li></ul></li></ul></li><li><p>test.sh：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;bin&#x2F;bash</span><br><span class="line">#ls $1</span><br><span class="line">echo &quot;第一个参数：$1&quot;</span><br><span class="line">echo &quot;第二个参数：$2&quot;</span><br><span class="line">echo &quot;第三个参数：$3&quot;</span><br><span class="line">echo &quot;文件名：$0&quot;</span><br><span class="line">echo &quot;所有参数：$*&quot;</span><br><span class="line">echo &quot;参数个数：$#&quot;</span><br></pre></td></tr></table></figure><p>执行：<code>sh test.sh 1 2 3 4</code><br><img src="image/ShellBasicSyntax/1.png" alt="Shell输出"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、Shell概述&quot;&gt;&lt;a href=&quot;#一、Shell概述&quot; class=&quot;headerlink&quot; title=&quot;一、Shell概述&quot;&gt;&lt;/a&gt;一、Shell概述&lt;/h1&gt;&lt;p&gt;弱类型语言&lt;/p&gt;
&lt;h2 id=&quot;1、Shell是什么&quot;&gt;&lt;a href=&quot;#1、
      
    
    </summary>
    
    
    
      <category term="Shell" scheme="http://yoursite.com/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo框架+ayer主题搭建博客</title>
    <link href="http://yoursite.com/2020/06/01/%E4%BD%BF%E7%94%A8hexo%E6%A1%86%E6%9E%B6-ayer%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2020/06/01/%E4%BD%BF%E7%94%A8hexo%E6%A1%86%E6%9E%B6-ayer%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-05-31T16:58:51.000Z</published>
    <updated>2020-05-31T17:03:26.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Loading……"><a href="#Loading……" class="headerlink" title="Loading……"></a>Loading……</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Loading……&quot;&gt;&lt;a href=&quot;#Loading……&quot; class=&quot;headerlink&quot; title=&quot;Loading……&quot;&gt;&lt;/a&gt;Loading……&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="gitalk" scheme="http://yoursite.com/tags/gitalk/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="http://yoursite.com/2020/05/31/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/05/31/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-05-31T07:36:17.000Z</published>
    <updated>2020-05-31T13:02:58.530Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>Linux + CentOS6.5</p><hr><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><ol><li><p>新建文件夹：mkdir 文件夹名</p></li><li><p>新建文件： touch 新建文本.txt</p></li><li><p>复制：cp 新建文本.txt 目标目录</p></li><li><p>剪切/移动：mv 新建文本.txt 目标目录</p></li><li><p>重命名：mv 新建文本.txt 重命名.txt</p></li><li><p>列出当前文件夹中所有文件</p><ul><li>ls : 只列出文件名或目录名</li><li>ls -l(ll) ：列出文件和目录详细信息</li></ul></li><li><p>查看当前所在路径：pwd</p></li><li><p>切换目录 cd </p><ul><li>cd .当前文件夹</li><li>cd ..上级文件夹</li><li>cd ~返回用户文件夹</li><li>cd /进入根目录</li></ul></li><li><p>删除：rm</p><ul><li>rm 删除文件（无提示）（可恢复）</li><li>rm -f 强制删除文件（无提示）</li><li>rm -i 交互式删除文件（有提示）</li><li>rm -r 递归删除文件和目录（慎用）</li><li>rm -rf* 删除当前目录下所有（慎用）</li></ul></li><li><p>删除一个空目录：rmdir 空目录名</p></li></ol><hr><h1 id="文本编辑"><a href="#文本编辑" class="headerlink" title="文本编辑"></a>文本编辑</h1><h2 id="gedit"><a href="#gedit" class="headerlink" title="gedit"></a>gedit</h2><p>gedit 文件名.txt 使用记事本打开文件</p><h2 id="vi-vim"><a href="#vi-vim" class="headerlink" title="vi/vim"></a>vi/vim</h2><p>i 输入<br>esc+:q退出<br>esc+:wq保存并退出<br>esc+:q!不保存强制退出</p><hr><h1 id="读取文档"><a href="#读取文档" class="headerlink" title="读取文档"></a>读取文档</h1><ol><li>cat 文件名：一次性读取全部文件内容（读取内容比较少的文件）</li><li>more 文件名：逐步读取文件内容、分页（读取内容比较多的文件）</li><li>tail （读取动态变化的文件）<ul><li><strong>tail -f 文件名：实时刷新<u>日志</u>，读取最新内容</strong></li><li>tail -c 字节数 文件名：输出最后n个字节</li><li>tail -n 行数 文件名：显示文件最后x行内容</li></ul></li></ol><hr><h1 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h1><p>查找文件中符合条件的字符串</p><ul><li>grep -i 字符 文件名.txt：忽略字符大小写的差别，查出包含匹配文本的所有行</li><li>grep -v 字符 文件名.txt：反向匹配，查出不包含匹配文本的所有行</li></ul><hr><h1 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h1><h2 id="文件权限-rwxrwxrwx"><a href="#文件权限-rwxrwxrwx" class="headerlink" title="文件权限 -rwxrwxrwx"></a>文件权限 -rwxrwxrwx</h2><p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx—] 分数则是770：<br>owner = rwx = 4+2+1 = 7<br>group = rwx = 4+2+1 = 7<br>others= — = 0+0+0 = 0</p><h2 id="权限变更命令"><a href="#权限变更命令" class="headerlink" title="权限变更命令"></a>权限变更命令</h2><ol><li><p>方法一：<code>chmod -R xyz 文件或目录</code><br>xyz : 就是刚刚提到的数字类型的权限属性，为 rwx 属性数值的相加<br> -R : 进行递归的持续变更，即连同次目录下的所有文件都会变更<br>举例来说，如果要将.bashrc这个文件所有的权限都设定启用，那么命令<code>chmod 777 .bashrc</code></p></li><li><p>方法二<br>将文件权限设置为 -rwxr-xr– ，可以使用 <code>chmod u=rwx,g=rx,o=r 文件名</code></p></li></ol><hr><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><ul><li>‘&gt;’：输出重定向命令<br>  <code>cat old.txt &gt; new.txt</code> 将old.txt内容复制给new.txt</li><li>‘&gt;&gt;’：输出重定向追加到文件的底部<br>  <code>cat old.txt &gt;&gt; new.txt</code> 将old.txt内容追加到new.txt中，若没有目标文件则新建文件</li></ul><hr><h1 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h1><p>把左边命令返回的结果交给右边命令处理<br><code>ps -ef | grep python</code> 搜素含有python字符串的进程</p><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol><li><p>ps：列出当前终端下的相关进程</p><ul><li>ps -ef：显示所有命令</li></ul></li><li><p>杀死进程</p><ul><li>kill PID：杀死进程</li><li>kill -9 PID：彻底杀死进程，当使用kill无法将进程杀死才使用</li></ul></li><li><p>ifconfig：查看网络情况</p></li><li><p>取别名</p><ul><li>alias 别名=命令（如alias is=ifconfig，is可以作为ifconfig使用）</li><li>unalias 别名：取消别名</li></ul></li><li><p>ping：测试网络连通</p></li><li><p>clear：清屏</p></li><li><p>hostname：查看主机名称</p></li><li><p>历史命令</p><ul><li>history：打印历史命令</li><li>history -c：清除历史命令</li></ul></li><li><p>service network restart：重启网卡</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;Linux + CentOS6.5&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;header
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://yoursite.com/2020/05/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2020/05/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-05-28T16:09:47.000Z</published>
    <updated>2020-05-31T17:04:02.644Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>内容</p><hr><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>内容</p><hr><h2 id="终"><a href="#终" class="headerlink" title="终"></a>终</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h2&gt;&lt;p&gt;内容&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第二章&quot;&gt;&lt;a href=&quot;#第二章&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="测试项" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95%E9%A1%B9/"/>
    
    
      <category term="测试项" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/05/28/hello-world/"/>
    <id>http://yoursite.com/2020/05/28/hello-world/</id>
    <published>2020-05-28T15:47:59.351Z</published>
    <updated>2020-05-28T15:47:59.351Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
